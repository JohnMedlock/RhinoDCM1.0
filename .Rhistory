print(caption)
print(result[,,i])
cat("\n")
}
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(result[,,i])
cat("\n")
}
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results$most.likely.transitions
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
print(most_likely)
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
print(dim(most_likely))
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
print(results1$posterior.probabilities)
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
print(results1$posterior.probabilities)
print(results1$model.fit)
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
#print(results1$posterior.probabilities)
print(dim(results1$model.fit))
results1$model.fit
names(results1$model.fit)
results1$model.fit[1]
results1$item.parameters
typeof(results1$item.parameters)
dim(results1$item.parameters)
rownames(results1$item.parameters)
colnames(results1$item.parameters)
?data.table
?datatable
library(data.table)
?data.table
DT <- data.table(x=c(1,2,3))
DT
results1$item.parameters[[,1]]
results1$item.parameters[,1]
DT <- data.table(Item1=results1$item.parameters[,1])
DT
?as.data.table
DT <- as.data.table(results1$item.parameters)
DT
DT <- as.data.table(results1$item.parameters, na.rm=FALSE)
DT
DT <- as.data.table(results1$item.parameters, na.rm=FALSE, keep.rownames=TRUE)
DT
?as.data.frame
DF <- as.data.frame(results1$item.parameters)
DF
DF <- as.data.frame(results1$item.parameters, row.names= rownames(results1$item.parameters))
DF
DF <- as.data.frame(results1$item.parameters, row.names= rownames(results1$item.parameters), col.names=colnames(results1$item.parameters))
DF
DF <- as.data.frame(results1$item.parameters, row.names= rownames(results1$item.parameters), col.names=colnames(results1$item.parameters), stringsAsFactors=TRUE)
DF
results1$item.parameters[1,1]
typeof(results1$item.parameters[1,1])
typeof(results1$growth[1,1])
library(data.table)
library(stringr)
item.parameters.as.data.table <- function(item.parameters) {
item.parameters.nrow <- nrow(item.parameters)
item.parameters.ncol <- ncol(item.parameters)
item.parameters.rownames <- rownames(item.parameters)
item.parameters.colnames <- colnames(item.parameters)
item.parameters.double <- sapply(as.matrix(item.parameters), function (value) {
value <- stringr::str_squish(value)
if (identical(value, "--")) {
value <- NA_real_
} else {
value <- as.double(value)
} # if
return(value);
})
names(item.parameters.double) <- NULL
item.parameters.matrix <- matrix(
data=item.parameters.double,
nrow=item.parameters.nrow,
ncol=item.parameters.ncol,
dimnames=list(item.parameters.rownames, item.parameters.colnames)
)
item.parameters.data.table <- as.data.table(
item.parameters.matrix,
keep.rownames=TRUE
)
return(item.parameters.data.table)
} # item.parameters.as.data.table
DT <- item.parameters.as.data.table(results1$item.parameters)
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
#print(results1$posterior.probabilities)
print(dim(results1$model.fit))
library(data.table)
library(stringr)
item.parameters.as.data.table <- function(item.parameters) {
item.parameters.nrow <- nrow(item.parameters)
item.parameters.ncol <- ncol(item.parameters)
item.parameters.rownames <- rownames(item.parameters)
item.parameters.colnames <- colnames(item.parameters)
item.parameters.double <- sapply(as.matrix(item.parameters), function (value) {
value <- stringr::str_squish(value)
if (identical(value, "--")) {
value <- NA_real_
} else {
value <- as.double(value)
} # if
return(value);
})
names(item.parameters.double) <- NULL
item.parameters.matrix <- matrix(
data=item.parameters.double,
nrow=item.parameters.nrow,
ncol=item.parameters.ncol,
dimnames=list(item.parameters.rownames, item.parameters.colnames)
)
item.parameters.data.table <- as.data.table(
item.parameters.matrix,
keep.rownames=TRUE
)
return(item.parameters.data.table)
} # item.parameters.as.data.table
DT <- item.parameters.as.data.table(results1$item.parameters)
print(DT)
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
#print(results1$posterior.probabilities)
print(most_likely)
most_likely <- results1$most.likely.transitions
priny(most_likely[1,1])
print(most_likely[1,1])
print(typeof(most_likely[1,1]))
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
#print(results1$posterior.probabilities)
print(most_likely)
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
convert_to_char_data_table <- function(new_data_frame) {
new_data_frame_nrow <- nrow(new_data_frame)
new_data_frame_ncol <- ncol(new_data_frame)
new_data_frame_rownames <- rownames(new_data_frame)
new_data_frame_colnames <- colnames(new_data_frame)
new_data_frame_matrix <- matrix(
data = as.matrix(new_data_frame),
nrow = new_data_frame_nrow,
ncol = new_data_frame_ncol,
dimnames = list(new_data_frame_rownames, new_data_frame_colnames)
)
new_data_frame_data_table <- as.data.table(
new_data_frame_matrix,
keep.rownames = TRUE
)
return(new_data_frame_data_table)
}
#print(results1$posterior.probabilities)
print(convert_to_char_data_table(most_likely))
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
library(data.table)
library(stringr)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
convert_to_char_data_table <- function(new_data_frame) {
new_data_frame_nrow <- nrow(new_data_frame)
new_data_frame_ncol <- ncol(new_data_frame)
new_data_frame_rownames <- rownames(new_data_frame)
new_data_frame_colnames <- colnames(new_data_frame)
new_data_frame_matrix <- matrix(
data = as.matrix(new_data_frame),
nrow = new_data_frame_nrow,
ncol = new_data_frame_ncol,
dimnames = list(new_data_frame_rownames, new_data_frame_colnames)
)
new_data_frame_data_table <- as.data.table(
new_data_frame_matrix,
keep.rownames = TRUE
)
return(new_data_frame_data_table)
}
#print(results1$posterior.probabilities)
print(convert_to_char_data_table(most_likely))
model_fit <- results1$model.fit
model_fit
class_of_elements <- lapply(.model_fit, class)
class_of_elements <- lapply(results1.model_fit, class)
model_fit <- results1$model.fit
class_of_elements <- lapply(.model_fit, class)
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
library(data.table)
library(stringr)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
model_fit <- results1$model.fit
class_of_elements <- lapply(.model_fit, class)
standards <- paste0("4.MD.", 1:4)
print(standards)
library(TDCM)
library(data.table)
library(stringr)
data(data.tdcm01, package = "TDCM")
# Get item responses from sample data.
data <- data.tdcm01$data
# Get Q-matrix from sample data and rename the attributes to match the standard.
q.matrix <- data.tdcm01$q.matrix
# Calibrate TDCM with measurement invariance assumed, full LCDM
model1 <- tdcm(data, q.matrix, num.time.points = 2)
# Summarize the results
results1 <- tdcm.summary(model1, num.time.points = 2, attribute.names = standards)
transition.probabilities <- results1$transition.probabilities
print(transition.probabilities)
for (i in 1:dim(transition.probabilities)[3]) {
attribute_title <- dimnames(transition.probabilities)[[3]][i]  # Extract the title from dimnames
caption <- paste("Matrix", i, ":", attribute_title)
print(caption)
print(transition.probabilities[,,i])
cat("\n")
}
most_likely <- results1$most.likely.transitions
model_fit <- results1$model.fit
class_of_elements <- lapply(model_fit, class)
print(class_of_elements)
model_fit$Global.Fit.Stats
model_fit$Item.RMSEA
model_fit$Mean.Item.RMSEA
as.data.table(model_fit$Item.RMSEA)
?as.data.table
as.data.table(model_fit$Item.RMSEA, keep.rownames = TRUE)
